name: Create Draft Release and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get repository name
      run: |
        REPO_NAME=${GITHUB_REPOSITORY#*/}
        echo "Repository name: $REPO_NAME"
        echo "::set-output name=repo_name::$REPO_NAME"
      id: get_repo_name

    - name: Get the current version tag
      id: get_version
      run: |
        git fetch --tags
        TAG=$(git tag --sort=-v:refname | head -n 1)
        if [ -z "$TAG" ]; then
          TAG="v0"
        else
          TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
        fi
        echo "Current version: $TAG"
        echo "::set-output name=current_tag::$TAG"

    - name: Bump version
      id: bump_version
      run: |
        VERSION=${{ steps.get_version.outputs.current_tag }}
        if [[ "$VERSION" == "" ]]; then
          VERSION="v0"
        fi
        VERSION_NUMBER="${VERSION#v}"
        NEW_VERSION_NUMBER=$((VERSION_NUMBER + 1))
        NEW_TAG="v$NEW_VERSION_NUMBER"
        echo "New version: $NEW_TAG"
        echo "::set-output name=new_tag::$NEW_TAG"

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/${{ steps.get_repo_name.outputs.repo_name }}:latest
          ${{ secrets.DOCKER_USERNAME }}/${{ steps.get_repo_name.outputs.repo_name }}:${{ steps.bump_version.outputs.new_tag }}
        push: true

    - name: Create Draft Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.bump_version.outputs.new_tag }}
        release_name: "Release ${{ steps.bump_version.outputs.new_tag }}"
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
